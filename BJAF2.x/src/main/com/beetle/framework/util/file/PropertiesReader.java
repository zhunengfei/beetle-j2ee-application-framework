/* Generated by Together */

/*
 * BJAF - Beetle J2EE Application Framework
 * 甲壳虫J2EE企业应用开发框架
 * 版权所有2003-2015 余浩东 (www.beetlesoft.net)
 * 
 * 这是一个免费开源的软件，您必须在
 *<http://www.apache.org/licenses/LICENSE-2.0>
 *协议下合法使用、修改或重新发布。
 *
 * 感谢您使用、推广本框架，若有建议或问题，欢迎您和我联系。
 * 邮件： <yuhaodong@gmail.com/>.
 */
package com.beetle.framework.util.file;

/**
 * <p>Title: ������</p>
 * <p>Description: �����ļ���ȡ��</p>
 * <p>Copyright: Copyright (c) 2003</p>
 * <p>Company: �׿ǳ�Ƽ�</p>
 * @author ��ƶ�

 * @version 1.0
 */

import java.io.ByteArrayInputStream;
import java.util.*;


public class PropertiesReader {
	private static Hashtable<String, ResourceBundle> mBundles = new Hashtable<String, ResourceBundle>();

	public static ResourceBundle getBundle(String bundleName) {
		ResourceBundle aBundle = (ResourceBundle) mBundles.get(bundleName);
		if (aBundle == null) {
			aBundle = ResourceBundle.getBundle(bundleName);
			mBundles.put(bundleName, aBundle);
		}
		return aBundle;
	}

	public static Properties getProperties(String resourceURL) {
		ResourceBundle rb = getBundle(resourceURL);
		if (rb == null) {
			getValueFromFile(resourceURL, "henryyu");
		}
		if (rb == null) {
			return null;
		}
		Properties p = new Properties();
		Enumeration<?> e = rb.getKeys();
		while (e.hasMoreElements()) {
			String key = (String) e.nextElement();
			p.setProperty(key, rb.getString(key));
		}
		return p;
	}

	public static String getValueFromFile(String filename, String key) {
		ResourceBundle aBundle = (ResourceBundle) mBundles.get(filename);
		if (aBundle == null) {
			String s;
			try {
				s = FileUtil.readString(filename);
				ByteArrayInputStream bis = new ByteArrayInputStream(
						s.getBytes());
				aBundle = new PropertyResourceBundle(bis);
				bis.close();
				bis = null;
				s = null;
				mBundles.put(filename, aBundle);
			} catch (Exception ex) {
				ex.printStackTrace();
			}
		}
		return getValue(aBundle, key);
	}

	public static String getUnicodeValueFromFile(String filename, String key) {
		ResourceBundle aBundle = (ResourceBundle) mBundles.get(filename);
		if (aBundle == null) {
			String s;
			try {
				s = FileUtil.readString(filename);
				ByteArrayInputStream bis = new ByteArrayInputStream(
						s.getBytes());
				aBundle = new PropertyResourceBundle(bis);
				bis.close();
				bis = null;
				s = null;
				mBundles.put(filename, aBundle);
			} catch (Exception ex) {
				ex.printStackTrace();
			}
		}
		return getUnicodeValue(aBundle, key);
	}

	public static String getValue(String resourceURL, String key) {
		return getValue(getBundle(resourceURL), key);
	}

	public static String getValue(ResourceBundle resource, String key) {
		try {
			String a = resource.getString(key);
			return new String(a.getBytes("8859_1"));
		} catch (Exception ex) {
			// ex.printStackTrace();
			return null;
		}
	}

	public static String getUnicodeValue(String resourceUrl, String key) {
		return getUnicodeValue(getBundle(resourceUrl), key);
	}

	public static String getUnicodeValue(ResourceBundle resource, String key) {
		try {
			return resource.getString(key);
		} catch (Exception ex) {
			ex.printStackTrace();
			return null;
		}
	}
}
